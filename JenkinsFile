pipeline {
    agent any

    environment {
        NEXUS_URL = 'http://172.17.0.2:8081'
        NEXUS_REPO = 'repository/front-dashboard/'
        ARTIFACT_GROUP = 'tn.example'
        ARTIFACT_NAME = 'angular-final'
        ARTIFACT_VERSION = "1.0.${env.BUILD_NUMBER}"
        DOCKER_REPO = 'hamza1991/dashboard_front'
        DOCKER_IMAGE_TAG = 'latest'
        DOCKER_HUB = 'dckr_pat_VYQcIqxKa0F90mo2s7ZLWAqzi7M'
        NODEJS_HOME = tool name: 'NodeJS', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
        DOCKER_IMAGE_NAME = 'dashbord-front'
        NEXUS_REPO_URL = 'http://172.17.0.2:8081/repository/front-dashboard/'
        DOCKERHUB_REPO = 'hamza1991/dashboard_front
    }
    tools {
        nodejs "NODEJS" // Specify the Node.js installation configured in Jenkins
    }
    stages {
        stage('Git') {
            steps {
                echo 'My first job pipeline angular'
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/hamzasarraj/Dashborad-Front.git']]])
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
                sh 'npm install @types/estree@latest'
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build --prod'
                sh 'ls -l dist'
            }
        }


stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t ${DOCKER_IMAGE_NAME} .'
                }
            }
        }
        
        stage('Push to DockerHub') {
            steps {
                script {
                    withDockerRegistry([credentialsId: 'dockerhub-credentials-id', url: 'https://index.docker.io/v1/']) {
                        sh "docker tag ${DOCKER_IMAGE_NAME} ${DOCKERHUB_REPO}:${env.BUILD_NUMBER}"
                        sh "docker push ${DOCKERHUB_REPO}:${env.BUILD_NUMBER}"
                    }
                }
            }
        }
    }
    post {
        always {
            sh 'npm cache clean --force' // Nettoyer le cache npm
        }
    }
}
